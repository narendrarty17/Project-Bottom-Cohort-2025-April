{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/Session_04_Final/app/context/AuthContext.js"],"sourcesContent":["// app/context/AuthContext.js\n'use client'; // Context provider and hook need to be client-side\n\nimport React, { createContext, useState, useContext, useCallback } from 'react';\n\n// Create the context with a default JavaScript object structure\nconst AuthContext = createContext({\n  user: null,\n  loginUser: () => { console.warn('loginUser function called without AuthProvider'); },\n  logoutUser: () => { console.warn('logoutUser function called without AuthProvider'); },\n});\n\n// Create a custom hook for easy access to the context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  // Runtime check remains useful even without TypeScript\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Create the Provider Component (no explicit prop types needed)\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // State holds 'Ram' or null\n\n  const loginUser = useCallback((username) => {\n    // Set user to 'Ram' if a non-empty username is provided\n    if (username) {\n      setUser(username);\n    } else {\n      console.warn('Auth Context: Attempted to login with empty username');\n      setUser(null); // Keep user null if login fails or username is empty\n    }\n  }, []); // Empty dependency array means this function reference is stable\n\n  // Function to log out the user - memoized with useCallback\n  const logoutUser = useCallback(() => {\n    setUser(null);\n    console.log('Auth Context: User logged out (set to null)');\n    // Optionally add API calls here\n  }, []); // Empty dependency array means this function reference is stable\n\n  // The value object provided to consuming components\n  const value = {\n    user,\n    loginUser,\n    logoutUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAG7B;AAFA,cAAc,mDAAmD;;;AAIjE,gEAAgE;AAChE,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAE;IAChC,MAAM;IACN,WAAW;QAAQ,QAAQ,IAAI,CAAC;IAAmD;IACnF,YAAY;QAAQ,QAAQ,IAAI,CAAC;IAAoD;AACvF;AAGO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,uDAAuD;IACvD,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAGO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,4BAA4B;IAEpE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC7B,wDAAwD;QACxD,IAAI,UAAU;YACZ,QAAQ;QACV,OAAO;YACL,QAAQ,IAAI,CAAC;YACb,QAAQ,OAAO,qDAAqD;QACtE;IACF,GAAG,EAAE,GAAG,iEAAiE;IAEzE,2DAA2D;IAC3D,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,QAAQ;QACR,QAAQ,GAAG,CAAC;IACZ,gCAAgC;IAClC,GAAG,EAAE,GAAG,iEAAiE;IAEzE,oDAAoD;IACpD,MAAM,QAAQ;QACZ;QACA;QACA;IACF;IAEA,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C","debugId":null}}]
}