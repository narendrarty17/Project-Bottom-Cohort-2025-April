{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/Session_04_Final/app/login/page.js"],"sourcesContent":["// app/login/page.js (Relevant part of the component)\n'use client';\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '../context/AuthContext'; // Adjust path if needed\n\nexport default function LoginPage() {\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const router = useRouter();\n    const { loginUser } = useAuth(); // Get loginUser from context\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setMessage('');\n        setIsLoading(true);\n\n        const formData = new FormData(event.currentTarget);\n        const username = formData.get('username')?.toString().trim();\n        const password = formData.get('password')?.toString();\n\n        if (!username || !password) {\n            setMessage('Please fill in all fields.');\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/auth/login', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n\n            let result = {}; // Initialize result object\n            try {\n                // Attempt to parse JSON regardless of response.ok, as error responses might contain details\n                result = await response.json();\n            } catch (jsonError) {\n                // Handle cases where the response body isn't valid JSON\n                console.error(\"Failed to parse JSON response:\", jsonError);\n                if (!response.ok) {\n                    // If response status indicates error and JSON parsing failed, show generic error\n                    setMessage(`Login failed with status: ${response.status}. Please try again.`);\n                    setIsLoading(false);\n                    return; // Stop processing\n                }\n                // If response was OK but not JSON (very unlikely for a login API), treat as missing data below.\n            }\n\n            if (response.ok) {\n                // --- Logic Change Starts Here ---\n                // Check if the successful response ALSO contains the expected username\n                if (result.user?.username) {\n                    // SUCCESS CASE: Response is OK and username confirmed by API\n                    console.log('Login successful via API for user:', result.user.username);\n                    setMessage(result.message || \"Login successful!\");\n\n                    // 3. Call loginUser ONLY when API confirms the user via username.\n                    // The context's loginUser function will handle setting the state to \"Ram\".\n                    loginUser(result.user.username);\n\n                    router.push('/'); // Redirect on successful login and context update\n                } else {\n                    // EDGE CASE / ERROR: Response status is OK, but required user data is missing.\n                    // Do NOT log the user in.\n                    console.error('API Login response OK, but user data missing.');\n                    setMessage('Login successful, but user details could not be retrieved. Please contact support.');\n                    // No call to loginUser() here\n                    // No redirect here\n                }\n                // --- Logic Change Ends Here ---\n            } else {\n                // FAILURE CASE: Response status indicates failure (e.g., 401, 404, 500)\n                console.error('API Login failed:', result.message || `Status ${response.status}`);\n                // Use message from API if available, otherwise provide a default\n                setMessage(result.message || 'Login failed. Please check your username and password.');\n                // No call to loginUser() here\n                // No redirect here\n            }\n        } catch (error) {\n            // NETWORK/UNEXPECTED ERROR CASE\n            console.error('Network or unexpected error during login:', error);\n            setMessage('Login failed. Please check your connection and try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Determine message color (remains the same)\n    const messageIsError = message.toLowerCase().includes('fail') || message.toLowerCase().includes('invalid') || message.toLowerCase().includes('error') || message.toLowerCase().includes('fill') || message.toLowerCase().includes('missing') || message.toLowerCase().includes('could not');\n    const messageColor = messageIsError ? 'text-red-600' : 'text-green-600';\n\n\n    // --- Rest of the component's JSX (form, message display, etc.) remains the same ---\n    return (\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 px-4 sm:px-6 lg:px-8\">\n            {/* Form container */}\n            <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\n                {/* ... H1, Form, Inputs, Button ... */}\n                 <h1 className=\"text-2xl font-bold text-center text-gray-900\">\n                    Log in to your account\n                </h1>\n                <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-1\">Username</label>\n                        <input type=\"text\" id=\"username\" name=\"username\" required disabled={isLoading} className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                        <input type=\"password\" id=\"password\" name=\"password\" required disabled={isLoading} className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\" />\n                    </div>\n                    <div>\n                        <button type=\"submit\" disabled={isLoading} className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n                            {isLoading ? 'Logging in...' : 'Login'}\n                        </button>\n                    </div>\n                </form>\n                {/* Message Area */}\n                {message && !isLoading && (\n                   <p className={`text-sm text-center ${messageColor} mt-4`}>{message}</p>\n               )}\n               {/* Link to Register */}\n               <p className=\"mt-4 text-center text-sm text-gray-600\">\n                   Don't have an account?{' '}\n                   <a href=\"/register\" className=\"font-medium text-indigo-600 hover:text-indigo-500 hover:underline\">Register here</a>\n               </p>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/Session_04_Final/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}