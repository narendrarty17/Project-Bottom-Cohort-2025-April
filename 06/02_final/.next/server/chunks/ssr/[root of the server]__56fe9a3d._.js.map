{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_6feb203d.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_6feb203d-module__8DQF1a__className\",\n  \"variable\": \"geist_6feb203d-module__8DQF1a__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_6feb203d.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.js%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_c7d183a.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_c7d183a-module__ZW1U4G__className\",\n  \"variable\": \"geist_mono_c7d183a-module__ZW1U4G__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_c7d183a.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.js%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,yJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,yJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,yJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/app/context/AuthContext.js"],"sourcesContent":["// Example structure for your AuthContext.js\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../../firebaseConfig'; // Adjust path\nimport { onAuthStateChanged, signOut } from 'firebase/auth'; // Import signOut too\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState(null); // Store the Firebase user object or null\n    const [loading, setLoading] = useState(true); // Add loading state\n\n    // This function might still be useful for triggering UI changes immediately after login attempt\n    // BUT the actual state update should primarily rely on onAuthStateChanged\n    const loginUser = (firebaseUser) => {\n       // You *could* manually set currentUser here for immediate UI feedback\n       // setCurrentUser(firebaseUser);\n       // However, onAuthStateChanged will fire shortly after anyway.\n       console.log(\"Login function called, state will be updated by listener.\");\n    };\n\n    const logoutUser = async () => {\n        try {\n            await signOut(auth);\n            // currentUser will be set to null by onAuthStateChanged\n            console.log(\"Logout successful\");\n        } catch (error) {\n            console.error(\"Logout failed:\", error);\n        }\n    };\n\n    // Listener for authentication state changes\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            console.log(\"Auth state changed. User:\", user ? user.uid : null);\n            setCurrentUser(user); // Set user to the Firebase user object, or null if logged out\n            setLoading(false); // Finished initial auth check\n        });\n\n        // Cleanup subscription on unmount\n        return unsubscribe;\n    }, []); // Run only once on mount\n\n    const value = {\n        currentUser,\n        loading, // Provide loading state to consumers\n        loginUser, // Provide the login trigger function (optional usefulness)\n        logoutUser // Provide logout function\n    };\n\n    // Render children only when not loading (optional, prevents flicker)\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}"],"names":[],"mappings":"AAAA,4CAA4C;;;;;;AAE5C;;;;;;AAEA,gTAA6D,qBAAqB;AAAlF;AAAA;;;;;AAEA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AAEzB,SAAS;IACZ,OAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AACtB;AAEO,SAAS,aAAa,EAAE,QAAQ,EAAE;IACrC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,yCAAyC;IAC/F,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,oBAAoB;IAElE,gGAAgG;IAChG,0EAA0E;IAC1E,MAAM,YAAY,CAAC;QAChB,sEAAsE;QACtE,gCAAgC;QAChC,8DAA8D;QAC9D,QAAQ,GAAG,CAAC;IACf;IAEA,MAAM,aAAa;QACf,IAAI;YACA,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;YACd,wDAAwD;YACxD,QAAQ,GAAG,CAAC;QAChB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kBAAkB;QACpC;IACJ;IAEA,4CAA4C;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM,CAAC;YAC1C,QAAQ,GAAG,CAAC,6BAA6B,OAAO,KAAK,GAAG,GAAG;YAC3D,eAAe,OAAO,8DAA8D;YACpF,WAAW,QAAQ,8BAA8B;QACrD;QAEA,kCAAkC;QAClC,OAAO;IACX,GAAG,EAAE,GAAG,yBAAyB;IAEjC,MAAM,QAAQ;QACV;QACA;QACA;QACA;IACJ;IAEA,qEAAqE;IACrE,qBACI,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBACxB,CAAC,WAAW;;;;;;AAGzB","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/app/layout.js"],"sourcesContent":["import { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { AuthProvider } from \"./context/AuthContext\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n         <AuthProvider>\n          {children}\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;;;;AAYO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,6IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEnE,cAAA,8OAAC,6HAAA,CAAA,eAAY;0BACX;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}