{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/app/context/AuthContext.js"],"sourcesContent":["// Example structure for your AuthContext.js\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../../firebaseConfig'; // Adjust path\nimport { onAuthStateChanged, signOut } from 'firebase/auth'; // Import signOut too\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState(null); // Store the Firebase user object or null\n    const [loading, setLoading] = useState(true); // Add loading state\n\n    // This function might still be useful for triggering UI changes immediately after login attempt\n    // BUT the actual state update should primarily rely on onAuthStateChanged\n    const loginUser = (firebaseUser) => {\n       // You *could* manually set currentUser here for immediate UI feedback\n       // setCurrentUser(firebaseUser);\n       // However, onAuthStateChanged will fire shortly after anyway.\n       console.log(\"Login function called, state will be updated by listener.\");\n    };\n\n    const logoutUser = async () => {\n        try {\n            await signOut(auth);\n            // currentUser will be set to null by onAuthStateChanged\n            console.log(\"Logout successful\");\n        } catch (error) {\n            console.error(\"Logout failed:\", error);\n        }\n    };\n\n    // Listener for authentication state changes\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            console.log(\"Auth state changed. User:\", user ? user.uid : null);\n            setCurrentUser(user); // Set user to the Firebase user object, or null if logged out\n            setLoading(false); // Finished initial auth check\n        });\n\n        // Cleanup subscription on unmount\n        return unsubscribe;\n    }, []); // Run only once on mount\n\n    const value = {\n        currentUser,\n        loading, // Provide loading state to consumers\n        loginUser, // Provide the login trigger function (optional usefulness)\n        logoutUser // Provide logout function\n    };\n\n    // Render children only when not loading (optional, prevents flicker)\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}"],"names":[],"mappings":"AAAA,4CAA4C;;;;;;AAE5C;;;;;;AAEA,0UAA6D,qBAAqB;AAAlF;AAAA;;;;;;AAEA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;AAEzB,SAAS;;IACZ,OAAO,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AACtB;GAFgB;AAIT,SAAS,aAAa,EAAE,QAAQ,EAAE;;IACrC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,yCAAyC;IAC/F,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,oBAAoB;IAElE,gGAAgG;IAChG,0EAA0E;IAC1E,MAAM,YAAY,CAAC;QAChB,sEAAsE;QACtE,gCAAgC;QAChC,8DAA8D;QAC9D,QAAQ,GAAG,CAAC;IACf;IAEA,MAAM,aAAa;QACf,IAAI;YACA,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;YACd,wDAAwD;YACxD,QAAQ,GAAG,CAAC;QAChB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kBAAkB;QACpC;IACJ;IAEA,4CAA4C;IAC5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACN,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE;sDAAM,CAAC;oBAC1C,QAAQ,GAAG,CAAC,6BAA6B,OAAO,KAAK,GAAG,GAAG;oBAC3D,eAAe,OAAO,8DAA8D;oBACpF,WAAW,QAAQ,8BAA8B;gBACrD;;YAEA,kCAAkC;YAClC,OAAO;QACX;iCAAG,EAAE,GAAG,yBAAyB;IAEjC,MAAM,QAAQ;QACV;QACA;QACA;QACA;IACJ;IAEA,qEAAqE;IACrE,qBACI,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBACxB,CAAC,WAAW;;;;;;AAGzB;IAhDgB;KAAA","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/app/login/page.js"],"sourcesContent":["// app/login/page.js\n'use client';\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '../context/AuthContext'; // Adjust path if needed\n\n// --- Firebase Imports ---\nimport { auth } from '../../firebaseConfig'; // Adjust path to your firebaseConfig.js\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n// --- End Firebase Imports ---\n\nexport default function LoginPage() {\n    const [email, setEmail] = useState(''); // State for email\n    const [password, setPassword] = useState(''); // State for password\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const router = useRouter();\n    const { loginUser } = useAuth(); // Keep using your context for now\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setMessage('');\n        setIsLoading(true);\n\n        // Basic validation (optional, but good practice)\n        if (!email || !password) {\n            setMessage('Please fill in both email and password.');\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            // --- Firebase Authentication Logic ---\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            const user = userCredential.user;\n            // --- End Firebase Authentication Logic ---\n\n            // Login successful\n            console.log('Login successful via Firebase for user:', user.email, 'UID:', user.uid);\n            setMessage(\"Login successful!\"); // Set success message\n\n            // --- Update Auth Context ---\n            // Modify loginUser in your AuthContext to handle the Firebase user object\n            // It should ideally store user.uid, user.email, etc.\n            loginUser(user); // Pass the whole Firebase user object to your context\n\n            // Redirect on successful login\n            router.push('/');\n\n        } catch (error) {\n            // --- Firebase Error Handling ---\n            console.error('Firebase Login Error:', error.code, error.message);\n            let friendlyMessage = 'Login failed. Please try again.'; // Default message\n            switch (error.code) {\n                case 'auth/invalid-email':\n                    friendlyMessage = 'Invalid email format.';\n                    break;\n                case 'auth/user-not-found': // Deprecated, use 'auth/invalid-credential'\n                case 'auth/wrong-password': // Deprecated, use 'auth/invalid-credential'\n                case 'auth/invalid-credential':\n                    friendlyMessage = 'Invalid email or password.';\n                    break;\n                case 'auth/user-disabled':\n                    friendlyMessage = 'This user account has been disabled.';\n                    break;\n                // Add more specific cases as needed\n                default:\n                    friendlyMessage = `Login failed: ${error.message}`; // More specific if possible\n            }\n            setMessage(friendlyMessage);\n            // --- End Firebase Error Handling ---\n\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Determine message color (remains the same)\n    const messageIsError = message.toLowerCase().includes('fail') || message.toLowerCase().includes('invalid') || message.toLowerCase().includes('error') || message.toLowerCase().includes('fill');\n    const messageColor = messageIsError ? 'text-red-600' : 'text-green-600';\n\n    // --- Update JSX Form ---\n    return (\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 px-4 sm:px-6 lg:px-8\">\n            <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\n                <h1 className=\"text-2xl font-bold text-center text-gray-900\">\n                    Log in to your account\n                </h1>\n                {/* Change to controlled components for easier state management */}\n                <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">Email Address</label>\n                        <input\n                            type=\"email\" // Change type to email\n                            id=\"email\"\n                            name=\"email\"\n                            value={email} // Controlled input\n                            onChange={(e) => setEmail(e.target.value)} // Update state on change\n                            required\n                            disabled={isLoading}\n                            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\"\n                            placeholder=\"you@example.com\"\n                         />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            value={password} // Controlled input\n                            onChange={(e) => setPassword(e.target.value)} // Update state on change\n                            required\n                            disabled={isLoading}\n                            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\" />\n                    </div>\n                    <div>\n                        <button type=\"submit\" disabled={isLoading} className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n                            {isLoading ? 'Logging in...' : 'Login'}\n                        </button>\n                    </div>\n                </form>\n                {/* Message Area */}\n                {message && !isLoading && (\n                   <p className={`text-sm text-center ${messageColor} mt-4`}>{message}</p>\n               )}\n               {/* Link to Register */}\n               <p className=\"mt-4 text-center text-sm text-gray-600\">\n                   Don't have an account?{' '}\n                   {/* Make sure you have a registration page setup with Firebase */}\n                   <a href=\"/register\" className=\"font-medium text-indigo-600 hover:text-indigo-500 hover:underline\">Register here</a>\n               </p>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}}]
}