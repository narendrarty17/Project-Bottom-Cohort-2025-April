{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/app/register/page.js"],"sourcesContent":["// app/register/page.js\n'use client';\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\n\n// --- Firebase Imports ---\nimport { auth } from '../../firebase/firebaseConfig'; // Adjust path if needed\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\n// --- End Firebase Imports ---\n\nexport default function RegisterPage() {\n    // Use state for controlled inputs\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const router = useRouter();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setMessage('');\n        setIsLoading(true);\n\n        // --- Get values from state (controlled inputs) ---\n        const currentEmail = email.trim();\n        const currentPassword = password; // No trim for password\n\n        // --- Client-side Validation ---\n        if (!currentEmail || !currentPassword || !confirmPassword) {\n            setMessage('Please fill in all fields.');\n            setIsLoading(false);\n            return;\n        }\n        if (currentPassword !== confirmPassword) {\n            setMessage('Passwords do not match.');\n            setIsLoading(false);\n            return;\n        }\n        // Firebase enforces minimum password length (6 chars) by default,\n        // but client-side check is still good UX.\n        if (currentPassword.length < 6) {\n            setMessage('Password must be at least 6 characters long.');\n            setIsLoading(false);\n            return;\n        }\n        // Basic email format check (optional, Firebase validates more thoroughly)\n        if (!/\\S+@\\S+\\.\\S+/.test(currentEmail)) {\n             setMessage('Please enter a valid email address.');\n             setIsLoading(false);\n             return;\n        }\n        // --- End Validation ---\n\n        try {\n            // --- Firebase Registration Logic ---\n            const userCredential = await createUserWithEmailAndPassword(\n                auth,\n                currentEmail,\n                currentPassword\n            );\n            const newUser = userCredential.user;\n            // --- End Firebase Registration Logic ---\n\n            console.log('Registration successful via Firebase for user:', newUser.uid, newUser.email);\n            setMessage('Registration successful! Please log in.');\n\n            // Optionally reset form fields using state setters\n            setEmail('');\n            setPassword('');\n            setConfirmPassword('');\n\n            // Redirect to login page after a short delay (optional)\n            setTimeout(() => {\n                router.push('/login');\n            }, 1500); // Redirect after 1.5 seconds\n\n        } catch (error) {\n            // --- Firebase Error Handling ---\n            console.error('Firebase Registration Error:', error.code, error.message);\n            let friendlyMessage = 'Registration failed. Please try again.'; // Default\n            switch (error.code) {\n                case 'auth/email-already-in-use':\n                    friendlyMessage = 'This email address is already registered.';\n                    break;\n                case 'auth/invalid-email':\n                    friendlyMessage = 'Please enter a valid email address.';\n                    break;\n                case 'auth/weak-password':\n                    friendlyMessage = 'Password is too weak. It must be at least 6 characters long.';\n                    break;\n                // Add more specific cases if needed\n                default:\n                    friendlyMessage = `Registration failed: ${error.message}`;\n            }\n            setMessage(friendlyMessage);\n            // --- End Firebase Error Handling ---\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Determine message color based on content\n    const messageIsSuccess = message.toLowerCase().includes('successful');\n    const messageColor = messageIsSuccess ? 'text-green-600' : 'text-red-600';\n\n    // --- Update JSX Form Inputs ---\n    return (\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100 px-4 sm:px-6 lg:px-8\">\n            <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\n                <h1 className=\"text-2xl font-bold text-center text-gray-900\">\n                    Create your account\n                </h1>\n                <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                    {/* Email Field (Changed from Username) */}\n                    <div>\n                        <label\n                            htmlFor=\"email\"\n                            className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                            Email Address\n                        </label>\n                        <input\n                            type=\"email\" // Change type to email\n                            id=\"email\"\n                            name=\"email\"\n                            value={email} // Controlled input\n                            onChange={(e) => setEmail(e.target.value)} // Update state\n                            required\n                            disabled={isLoading}\n                            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\"\n                            placeholder=\"you@example.com\"\n                         />\n                    </div>\n\n                    {/* Password Field */}\n                    <div>\n                        <label\n                            htmlFor=\"password\"\n                            className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                            Password (min. 6 characters)\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            value={password} // Controlled input\n                            onChange={(e) => setPassword(e.target.value)} // Update state\n                            required\n                            minLength=\"6\"\n                            disabled={isLoading}\n                            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\"\n                        />\n                    </div>\n\n                    {/* Confirm Password Field */}\n                    <div>\n                        <label\n                            htmlFor=\"confirmPassword\"\n                            className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                            Confirm Password\n                        </label>\n                        <input\n                            type=\"password\"\n                            id=\"confirmPassword\"\n                            name=\"confirmPassword\"\n                            value={confirmPassword} // Controlled input\n                            onChange={(e) => setConfirmPassword(e.target.value)} // Update state\n                            required\n                            minLength=\"6\"\n                            disabled={isLoading}\n                            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50 disabled:bg-gray-200\"\n                        />\n                    </div>\n\n                    {/* Submit Button */}\n                    <div>\n                        <button\n                            type=\"submit\"\n                            disabled={isLoading}\n                            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                            {isLoading ? 'Registering...' : 'Register'}\n                        </button>\n                    </div>\n                </form>\n\n                {/* Message Area */}\n                {message && (\n                    <p className={`text-sm text-center ${messageColor} mt-4`}>\n                        {message}\n                    </p>\n                )}\n\n                {/* Link to Login */}\n                <p className=\"mt-4 text-center text-sm text-gray-600\">\n                    Already have an account?{' '}\n                    <a href=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500 hover:underline\">\n                        Log in here\n                    </a>\n                </p>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}