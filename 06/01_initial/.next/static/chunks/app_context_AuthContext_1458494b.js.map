{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narendrakumar/Documents/06/01_initial/app/context/AuthContext.js"],"sourcesContent":["// app/context/AuthContext.js\n'use client';\n\n// Keep React imports, remove useEffect from here if not used elsewhere\nimport React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\n\n// firebase imports\nimport { auth } from '.../../firebase/firebaseConfig'; // Adjust path\nimport { onAuthStateChanged, signOut } from 'firebase/auth'; // Import signOut too\n\nconst AUTH_STORAGE_KEY = 'authUser';\n\nconst AuthContext = createContext({\n  user: null,\n  loginUser: () => { console.warn('loginUser function called without AuthProvider'); },\n  logoutUser: () => { console.warn('logoutUser function called without AuthProvider'); },\n});\n\nexport const useAuth = () => {\n  return context = useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  \n  // Added loading state\n  const [loading, isLoading] = useState(false);\n\n  // block to fetch user from localstorage to login\n  useEffect(() => {\n    try {\n      const storedUser = window.localStorage.getItem(AUTH_STORAGE_KEY);\n      if (storedUser) {\n        setUser(storedUser); // Set state based on localStorage\n      } else {\n        console.log('Auth Context: No user found in localStorage');\n      }\n    } catch (error) {\n      setUser(null);\n    } finally {\n        setIsInitialized(true);\n    }\n  }, []);\n\n  // block to add item in localstorage if user logs in\n  useEffect(() => {\n      try {\n        if (user) {\n          window.localStorage.setItem(AUTH_STORAGE_KEY, user);\n        } else {\n          window.localStorage.removeItem(AUTH_STORAGE_KEY);\n        }\n      } catch (error) {\n        console.error(\"Auth Context: Error writing to localStorage key\");\n      }\n  }, [user, isInitialized]);\n\n    // Listener for authentication state changes\n    useEffect(() => {\n      const unsubscribe = onAuthStateChanged(auth, (user) => {\n          console.log(\"Auth state changed. User:\", user ? user.uid : null);\n          setCurrentUser(user); // Set user to the Firebase user object, or null if logged out\n      });\n\n      // Cleanup subscription on unmount\n      return unsubscribe;\n  }, []); // Run only once on mount\n\n  // Login function remains the same - it just calls setUser\n  const loginUser = useCallback((username) => {\n    if (username) {\n      setUser(username);\n      console.log(`Auth Context: User logged in`);\n    } else {\n      console.warn('Auth Context: Attempted to login with empty username');\n      setUser(null);\n    }\n  }, []);\n\n  // Logout function remains the same - it just calls setUser\n  const logoutUser = async () => {\n    {/* added try catch block for logout */}\n    try {\n        await signOut(auth);\n        // currentUser will be set to null by onAuthStateChanged\n        console.log(\"Logout successful\");\n    } catch (error) {\n        console.error(\"Logout failed:\", error);\n    }\n    {/* End of try catch block */}\n    \n    setUser(null);\n    console.log('Auth Context: User logged out');\n  };\n\n  // Include isInitialized in the context value if components need to wait for auth check\n  const value = {\n    user,\n    isInitialized, // Components can use this to show loading states\n    loginUser,\n    logoutUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAG7B,uEAAuE;AACvE;;;;;;AAIA,0UAA6D,qBAAqB;AAAlF;AAAA;;;AAPA;;;;AASA,MAAM,mBAAmB;AAEzB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;IAChC,MAAM;IACN,WAAW;QAAQ,QAAQ,IAAI,CAAC;IAAmD;IACnF,YAAY;QAAQ,QAAQ,IAAI,CAAC;IAAoD;AACvF;AAEO,MAAM,UAAU;;IACrB,OAAO,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAC9B;GAFa;AAIN,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,sBAAsB;IACtB,MAAM,CAAC,SAAS,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEtC,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI;gBACF,MAAM,aAAa,OAAO,YAAY,CAAC,OAAO,CAAC;gBAC/C,IAAI,YAAY;oBACd,QAAQ,aAAa,kCAAkC;gBACzD,OAAO;oBACL,QAAQ,GAAG,CAAC;gBACd;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ;YACV,SAAU;gBACN,iBAAiB;YACrB;QACF;iCAAG,EAAE;IAEL,oDAAoD;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACN,IAAI;gBACF,IAAI,MAAM;oBACR,OAAO,YAAY,CAAC,OAAO,CAAC,kBAAkB;gBAChD,OAAO;oBACL,OAAO,YAAY,CAAC,UAAU,CAAC;gBACjC;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC;YAChB;QACJ;iCAAG;QAAC;QAAM;KAAc;IAEtB,4CAA4C;IAC5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE;sDAAM,CAAC;oBAC1C,QAAQ,GAAG,CAAC,6BAA6B,OAAO,KAAK,GAAG,GAAG;oBAC3D,eAAe,OAAO,8DAA8D;gBACxF;;YAEA,kCAAkC;YAClC,OAAO;QACX;iCAAG,EAAE,GAAG,yBAAyB;IAEjC,0DAA0D;IAC1D,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC;YAC7B,IAAI,UAAU;gBACZ,QAAQ;gBACR,QAAQ,GAAG,CAAC,CAAC,4BAA4B,CAAC;YAC5C,OAAO;gBACL,QAAQ,IAAI,CAAC;gBACb,QAAQ;YACV;QACF;8CAAG,EAAE;IAEL,2DAA2D;IAC3D,MAAM,aAAa;QACjB,CAAuC;QACvC,IAAI;YACA,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;YACd,wDAAwD;YACxD,QAAQ,GAAG,CAAC;QAChB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kBAAkB;QACpC;QACA,CAA6B;QAE7B,QAAQ;QACR,QAAQ,GAAG,CAAC;IACd;IAEA,uFAAuF;IACvF,MAAM,QAAQ;QACZ;QACA;QACA;QACA;IACF;IAEA,qBAAO,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;IAnFa;KAAA","debugId":null}}]
}